<?php
/**
 * @file
 * Creates a unique Site Wide Contact form with out drop down menu for each of the Contact Categories.
 */

/**
 * Implementation of hook_menu().
 */
function contact_forms_menu() {
  $items = array();
  $items['admin/structure/contact/settings'] = array(
    'title' => 'Contact Forms Settings',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('contact_forms_settings_form'),
    'access arguments' => array('administer contact forms'),
  );
  return $items;
}

/**
 * Generates list of contacts on /contact.
 */
function contact_forms_page() {
  $config = config('contact_forms.settings');
  backdrop_set_title($config->get('title'));
  $categories = contact_forms_categories();
  $output = theme('contact_forms_page', array(
    'categories' => $categories,
    ));
  return $output;
}

/**
 * Implementation of hook_settings
 */
function contact_forms_settings_form($form, &$form_state){

  $config = config('contact_forms.settings');
  $space_substitute = $config->get('space_substitute');
  $default_title = $config->get('default_title');
  $default_information = $config->get('default_information');
  $title =  $config->get('title');


   // New form item for radios for space token
  $sub = array(
    0 => t('Replace spaces with a Dash. (recommended. URLs will be like www.mysite.com/contact/Steve-Jones)'),
    1 => t('Replace spaces with an Underscore. (Useful if you want to have dashes in your categories e.g. Bill Smith-Jones. URLs will be like www.mysite.com/contact/Bill_Smith-Jones)'),
    2 => t('Don\'t replace the spaces. (URLs will be like www.mysite.com/contact/Steve Jones)'),
    );

   $form['contact_forms_space_substitute'] = array(
    '#type' => 'radios',
    '#title' => t('Spaces in Categories replacement'),
    '#default_value' => $space_substitute,
    '#weight' => -5,
    '#options' => $sub,
    '#required' => true,
    '#description' => t('Spaces in the category URL can be replaced with a dash or an underscore or not at all.'),
      );

  $form['contact_forms_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Default Title for individual contact pages'),
    '#default_value' => $default_title,
    '#weight' => -3,
    '#maxlength' => 60,
    '#description' => t('If a category doesn\'t have a page title specified this will be shown. To place the category name in the title use the wildcard "@category".'),
    '#required' => true,
  );

  $form['contact_forms_information'] = array(
    '#type' => 'textarea',
    '#title' => t('Default Additional Information for individual contact pages'),
    '#weight' => -2,
    '#default_value' => $default_information,
    '#description' => t('If a category doesn\'t have additional information specified this will be shown.  To place the category name in your message use the wildcard "@category" e.g. You can send @category a message using the contact form below.'),
   );

  $form['contact_forms_contact_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title on main contact page.'),
    '#weight' => -1,
    '#default_value' => $title,
    //'#description' => t('.'),
   );

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}

/**
 * Form submission handler for contact_forms_settings_form().
 */
function contact_forms_settings_form_submit($form, &$form_state) {
  $config_data['space_substitute'] = $form_state['values']['contact_forms_space_substitute'];
  $config_data['default_title'] = $form_state['values']['contact_forms_title'];
  $config_data['default_information'] = $form_state['values']['contact_forms_information'];
  $config_data['title'] = $form_state['values']['contact_forms_contact_title'];

  $config = config('contact_forms.settings');
  $config->setData($config_data);
  $config->save();
}

/**
 * Implementation of hook_form_alter()
 */
function contact_forms_form_alter(&$form, $form_state, $form_id) {
  $path = $_GET['q'];
  $config = config('contact_forms.settings');

  // Alter all contact forms generated by this module
  if ($form_id == 'contact_site_form' && backdrop_match_path($path, 'contact/*')) {

    $default_title = $config->get('default_title');
    $default_information = $config->get('default_information');

    // work out spaces substitution
    $sub_array = _contact_forms_sub_array();
    $sub_key = $config->get('space_substitute');

    if ($sub_key < 2){
      $replacement = $sub_array[$sub_key];
      $category = str_replace( $replacement , ' ' , arg(1));
      $subject = str_replace( $replacement , ' ' , arg(2));
    }
    else {
      $category =  arg(1);
      $subject =  arg(2);
    }

    $category_data = contact_forms_load_by_cat($category);

    // if category doesn't exist redirect to 404
    if (!$category_data) {
      backdrop_not_found();
      exit();
    }

    $category_data = contact_forms_prepare_category($category_data);

    // Set Contact Form Title
    backdrop_set_title($category_data['page_title']);

    // define form.
    $form['contact_information'] = array(
      '#markup' => $category_data['page_info'],
      '#weight' => -1,
      '#prefix' => '<div class="form-item">',
      '#suffix' => '</div>',
     );

    $form['subject'] = array('#type' => 'textfield',
      '#title' => t('Subject'),
      '#maxlength' => 255,
      '#default_value' => $subject,
      '#required' => TRUE,
    );

    $form['cid'] = array(
      '#type' => 'hidden',
      '#value' => $category_data['cid'],
      '#required' => TRUE,
    );

    $form['orig_category'] = array(
      '#type' => 'hidden',
      '#value' => $category_data['category'],
    );
  }

  // Alter the contact_category_edit_form
  if($form_id == 'contact_category_edit_form'){

    $cid = $form['cid']['#value'];

    if ($cid) {
      $contact = contact_forms_load($cid);
    }

    // Adds a text field that will hold category specific info for the contact page information
    $form['page_title'] = array(
      '#type' => 'textfield',
      '#title' => t('Page Title'),
      '#weight' => -1,
      '#default_value' => (isset($contact['page_title']))? $contact['page_title'] : '',
      '#description' => t('Page Title for this individual contact page. If this is left empty the "Default Page Title" will be displayed'),
    );

    // Adds a text area that will hold category specific info for the contact page information
    $form['page_info'] = array(
      '#type' => 'textarea',
      '#title' => t('Additional Information'),
      '#weight' => 0,
      '#default_value' => (isset($contact['page_info']))? $contact['page_info'] : '',
      '#description' => t('Information to show on the individual contact page. If this is left empty the "Default Additional Information" will be displayed'),
    );

    // Set the weight of the category name so It appears above our inserted info area
    $form['category']['#weight']='-2';

    // Add validation and submit functions
    $form['#submit'][] = 'contact_forms_edit_form_submit';
  }

  // Alter contact_category_delete_form - add extra submit function
  if ($form_id == 'contact_category_delete_form') {
    $form['#submit'][] = 'contact_forms_delete_form_submit';
  }
}

/**
 * Form submission handler for contact_forms_edit_form{}.
 */
function contact_forms_edit_form_submit($form, &$form_state) {

  $page_title = $form_state['values']['page_title'];
  $page_info = $form_state['values']['page_info'];
  $cid = $form_state['values']['cid'];

  // if creating new category need to get new cid
  if (!isset($cid)) {
    $config_data = $form_state['categories_data'];
    $categories = $config_data['categories'];

    $max_cid = 0;

    foreach ($categories as $key => $cat) {
      $cids[] = $cat['cid'];
    }
    if (!empty($cids)) {
      $max_cid = max($cids);
      $cid = $max_cid + 1;
    } else {
      $cid = 1;
    }
  }

  $config = config('contact_forms.extras');
  $config_data = $config->get();

  $config_data['cids'][$cid] = array(
      'page_title' => $page_title,
      'page_info' => $page_info
    );
  
  $config->setData($config_data);
  $config->save();
}

/**
 * Implementation of hook_form_submit
 */
function contact_forms_delete_form_submit($form, &$form_state) {
  $contact = $form['contact']['#value'];

  $config = config('contact_forms.extras');
  $config_data = $config->get();

  unset($config_data['cids'][$contact['cid']]);

  $config->setData($config_data);
  $config->save();
}

/**
 * Implementation of hook_menu_alter
 */
 function contact_forms_menu_alter(&$items) {

  $items['contact/%'] = $items['contact'];

  $items['contact']['page callback'] = 'contact_forms_page';

  $items['admin/structure/contact'] = array(
    'title' => 'Contact form',
    'description' => 'Create a system contact form and set up categories for the form to use.',
    'page callback' => 'contact_forms_category_list',
    'access arguments' => array('administer contact forms'),
  );

  unset($items['admin/structure/contact']['file']);
}

/**
 * Implements hook_theme().
 */
function contact_forms_theme() {
  return array(
    'contact_forms_page' => array(
      'variables' => array(
        'cid' => NULL,
        'category' => NULL,
        'page_title' => NULL,
        'page_info' => NULL,
        'path' => NULL,
        'link' => NULL,
        ),
      'template' => 'templates/contact-forms-page',
    ),
    /*'contact_forms_contact' => array(
      'variables' => array(
        'categories' => NULL,
        ),
      'template' => 'templates/contact-forms-contact',
    ),*/
  );
}

/**
 * Categories/list tab.
 * Replace the Category List Page with our table with more columns
 */
function contact_forms_category_list() {
  $header = array(
    t('Category'),
    t('Recipients'),
    t('Weight'),
    t('Selected'),
    t('Title'),
    t('Info'),
    array('data' => t('Operations'), 'colspan' => 2),
  );
  $rows = array();

  $config = config('contact.categories');
  $settings = config('contact_forms.settings');
  $contact_default_category = $config->get('contact_default_category');

  // Get all the contact categories.
  $categories = contact_forms_categories();

  $sub_array = _contact_forms_sub_array();
  $sub_key =  $settings->get('space_substitute');

  // Loop through the categories and add them to the table.
  foreach ($categories as $category) {

    $title_status = ($category['page_title'] != '') ? 'Custom' : 'Default';
    $info_status = ($category['page_info'] != '') ? 'Custom' : 'Default';

    if ($category['selected'] == 1) {
        $selected = t('Yes');
      }
      else {
         $selected = t('No');
      }

    if ($sub_key < 2) {
      //watchdog('custom', $sub_key);
      $link = 'contact/' . str_replace(' ', $sub_array[$sub_key]  , check_plain($category['category']));
    } else {
      $link = 'contact/' .  check_plain($category['category']);
    }

    $rows[] = array(

      l(check_plain($category['category']), $link, array('attributes' => array('target' => '_blank'))),

      check_plain($category['recipients']),

      $category['weight'],
      $selected,
      $title_status,
      $info_status,
      l(t('Configure'), 'admin/structure/contact/configure/' . $category['cid']),
      l(t('Delete'), 'admin/structure/contact/delete/' . $category['cid']),
    );
  }

  if (!$rows) {
    $rows[] = array(array(
      'data' => t('No categories available.'),
      'colspan' => 7,
    ));
  }
  return theme('table', array('header' => $header, 'rows' => $rows));
}

/**
 * Define error message
 */
function _contact_forms_error_message() {
  backdrop_set_message(t('Please set the "Spaces in Categories replacement" !link', array( '!link' => l('here',  'admin/structure/contact/settings' ))));
}

/**
 * Define Space Substitution array
 */
function _contact_forms_sub_array() {
    return array(0 => '-', 1 => '_');
}

/**
 * Implements hook_config_info().
 */
function contact_forms_config_info() {
  $prefixes['contact_forms.settings'] = array(
    'label' => t('Contact_forms settings'),
    'group' => t('Contact-forms'),
  );
  $prefixes['contact_forms.extras'] = array(
    'label' => t('Contact category extras'),
    'group' => t('Contact_forms'),
  );
  return $prefixes;
}

/**
 * Loads an array of all contact categories.
 *
 * @return array
 *   An array of contact categoryies data.
 */
function contact_forms_categories() {

  $config = config('contact.categories');
  $contact_default_category = $config->get('contact_default_category');
  $categories = $config->get('categories');

  // get contact_forms extras
  $config = config('contact_forms.extras');
  $extras = $config->get('cids');

  if ($categories){

    foreach ($categories as $key => $category) {

      $cid = $category['cid'];

     if ($cid == $contact_default_category) {
        $categories[$key]['selected'] = 1;
      }
      else {
        $categories[$key]['selected'] = 0;
      }

      if($extras[$cid]){
        $categories[$key]['page_title'] = $extras[$cid]['page_title'];
        $categories[$key]['page_info'] = $extras[$cid]['page_info'];
      }
    }
  }

  // Sort the categories by weight then category.
  if ($categories) {
    backdrop_sort($categories, array('weight' => SORT_NUMERIC, 'category' => SORT_STRING));
  }
  return $categories;
}

/**
 * Loads a contact category.
 *
 * @param int $cid
 *   The contact category id.
 *
 * @return array
 *   An array with the contact category's data.
 */
function contact_forms_load($cid) {
  $categories = contact_forms_categories();

  if ($categories) {
    foreach ($categories as $key => $cat) {
      if ($cid == $cat['cid']) {
        $contact = $categories[$key];
        return $contact;
      }
    }
  }
  return FALSE;
}

/**
 * Loads a contact category by category.
 *
 * @param int $cat
 *   The contact category category.
 *
 * @return array
 *   An array with the contact category's data.
 */
function contact_forms_load_by_cat($cat) {
  $categories = contact_forms_categories();

  if ($categories) {
    foreach ($categories as $key => $category) {
      if ($cat == $category['category']) {
        $contact = $categories[$key];
        return $contact;
      }
    }
  }
  return FALSE;
}

/**
 * Prepares category data for use in template and form
 *
  * @param array $category
 *   The contact category.
 */
function contact_forms_prepare_category($category){

  $sub_array = _contact_forms_sub_array();

  $config = config('contact_forms.settings');
  $sub_key = $config->get('space_substitute');
  $default_title = $config->get('default_title');
  $default_information = $config->get('default_information');


  if (empty($category['page_title'])) {
    $category['page_title'] = str_replace( '@category', $category['category'], $default_title);
  }
  else {
    $category['page_title'] = filter_xss_admin($category['page_title']);
  }

  if (empty($category['page_info'])) {
    $category['page_info'] = str_replace( '@category', $category['category'], $default_information);
  }
  else {
    $category['page_info'] = filter_xss_admin($category['page_info']);
  }
  $path = 'contact/' . str_replace(' ', $sub_array[$sub_key]  , check_plain($category['category']));
  $category['path'] = $path;
  $category['link'] = l('Contact', $path);

  return $category;
}
